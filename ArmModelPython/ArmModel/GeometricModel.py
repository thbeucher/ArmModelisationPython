'''
Author: Thomas Beucher

Module: InverseGeometricModel

Description: we find here the inverse and direct geometric model for a two joints arm and also the joint stop function 
                for the human arm
'''

import math
import numpy as np
from Utils.FileSaving import fileSavingStr

def mgi(xi, yi, l1, l2):
    '''
    Inverse geometric model
        
    Inputs:     -xi: absciss of the effective point
                -yi: ordinate of the effective point
                -l1: arm length
                -l2: foreArm length
        
    Outputs:
                -q1: arm angle
                -q2: foreArm angle
    '''
    a = ((xi**2)+(yi**2)-(l1**2)-(l2**2))/(2*l1*l2)
    try:
        q2 = math.acos(a)
        c = l1 + l2*(math.cos(q2))
        d = l2*(math.sin(q2))
        q1 = math.atan2(yi,xi) - math.atan2(d,c)
        return q1, q2
    except ValueError:
        print("forbidden value")
        return "None"
    
    
def mgd(q, l1, l2):
    '''
    Direct geometric model of the arm
        
    Inputs:     -q: (2,1) numpy array
                -l1: arm length
                -l2: foreArm length
        
    Outputs:
                -coordElbow: elbow coordinate
                -coordHand: hand coordinate
    '''
    coordElbow = (l1*np.cos(q[0,0]), l1*np.sin(q[0,0]))
    coordHand = (l2*np.cos(q[1,0] + q[0,0]) + l1*np.cos(q[0,0]), l2*np.sin(q[1,0] + q[0,0]) + l1*np.sin(q[0,0]))
    return coordElbow, coordHand
    
    
def jointStop(q):
    '''
    Articular stop for the human arm
    Shoulder: -0.6 <= q1 <= 2.6
    Elbow: -0.2 <= q2 <= 3.0
    
    Inputs:    -q: (2,1) numpy array
    
    Outputs:    -q: (2,1) numpy array
    '''
    if q[0,0] < -0.6:
        q[0,0] = -0.6
    elif q[0,0] > 2.6:
        q[0,0] = 2.6
    if q[1,0] < -0.2:
        q[1,0] = -0.2
    elif q[1,0] > 3.0:
        q[1,0] = 3.0
    return q


x = [(-0.1, 0.12), (-0.1, 0.13), (-0.1, 0.14), (-0.1, 0.15), (-0.1, 0.16), (-0.1, 0.17), (-0.1, 0.18), (-0.1, 0.19), (-0.1, 0.2), (-0.1, 0.21), (-0.1, 0.22), (-0.1, 0.23), (-0.1, 0.24), (-0.09, 0.12), (-0.09, 0.13), (-0.09, 0.14), (-0.09, 0.15), (-0.09, 0.16), (-0.09, 0.17), (-0.09, 0.18), (-0.09, 0.19), (-0.09, 0.2), (-0.09, 0.21), (-0.09, 0.22), (-0.09, 0.23), (-0.09, 0.24), (-0.08, 0.12), (-0.08, 0.13), (-0.08, 0.14), (-0.08, 0.15), (-0.08, 0.16), (-0.08, 0.17), (-0.08, 0.18), (-0.08, 0.19), (-0.08, 0.2), (-0.08, 0.21), (-0.08, 0.22), (-0.08, 0.23), (-0.08, 0.24), (-0.07, 0.12), (-0.07, 0.13), (-0.07, 0.14), (-0.07, 0.15), (-0.07, 0.16), (-0.07, 0.17), (-0.07, 0.18), (-0.07, 0.19), (-0.07, 0.2), (-0.07, 0.21), (-0.07, 0.22), (-0.07, 0.23), (-0.07, 0.24), (-0.06, 0.12), (-0.06, 0.13), (-0.06, 0.14), (-0.06, 0.15), (-0.06, 0.16), (-0.06, 0.17), (-0.06, 0.18), (-0.06, 0.19), (-0.06, 0.2), (-0.06, 0.21), (-0.06, 0.22), (-0.06, 0.23), (-0.06, 0.24), (-0.05, 0.12), (-0.05, 0.13), (-0.05, 0.14), (-0.05, 0.15), (-0.05, 0.16), (-0.05, 0.17), (-0.05, 0.18), (-0.05, 0.19), (-0.05, 0.2), (-0.05, 0.21), (-0.05, 0.22), (-0.05, 0.23), (-0.05, 0.24), (-0.04, 0.12), (-0.04, 0.13), (-0.04, 0.14), (-0.04, 0.15), (-0.04, 0.16), (-0.04, 0.17), (-0.04, 0.18), (-0.04, 0.19), (-0.04, 0.2), (-0.04, 0.21), (-0.04, 0.22), (-0.04, 0.23), (-0.04, 0.24), (-0.03, 0.12), (-0.03, 0.13), (-0.03, 0.14), (-0.03, 0.15), (-0.03, 0.16), (-0.03, 0.17), (-0.03, 0.18), (-0.03, 0.19), (-0.03, 0.2), (-0.03, 0.21), (-0.03, 0.22), (-0.03, 0.23), (-0.03, 0.24), (-0.02, 0.12), (-0.02, 0.13), (-0.02, 0.14), (-0.02, 0.15), (-0.02, 0.16), (-0.02, 0.17), (-0.02, 0.18), (-0.02, 0.19), (-0.02, 0.2), (-0.02, 0.21), (-0.02, 0.22), (-0.02, 0.23), (-0.02, 0.24), (-0.01, 0.12), (-0.01, 0.13), (-0.01, 0.14), (-0.01, 0.15), (-0.01, 0.16), (-0.01, 0.17), (-0.01, 0.18), (-0.01, 0.19), (-0.01, 0.2), (-0.01, 0.21), (-0.01, 0.22), (-0.01, 0.23), (-0.01, 0.24), (0.0, 0.12), (0.0, 0.13), (0.0, 0.14), (0.0, 0.15), (0.0, 0.16), (0.0, 0.17), (0.0, 0.18), (0.0, 0.19), (0.0, 0.2), (0.0, 0.21), (0.0, 0.22), (0.0, 0.23), (0.0, 0.24), (0.00999, 0.12), (0.00999, 0.13), (0.00999, 0.14), (0.00999, 0.15), (0.00999, 0.16), (0.00999, 0.17), (0.00999, 0.18), (0.00999, 0.19), (0.00999, 0.2), (0.00999, 0.21), (0.00999, 0.22), (0.00999, 0.23), (0.00999, 0.24), (0.01999, 0.12), (0.01999, 0.13), (0.01999, 0.14), (0.01999, 0.15), (0.01999, 0.16), (0.01999, 0.17), (0.01999, 0.18), (0.01999, 0.19), (0.01999, 0.2), (0.01999, 0.21), (0.01999, 0.22), (0.01999, 0.23), (0.01999, 0.24), (0.02999, 0.12), (0.02999, 0.13), (0.02999, 0.14), (0.02999, 0.15), (0.02999, 0.16), (0.02999, 0.17), (0.02999, 0.18), (0.02999, 0.19), (0.02999, 0.2), (0.02999, 0.21), (0.02999, 0.22), (0.02999, 0.23), (0.02999, 0.24), (0.03999, 0.12), (0.03999, 0.13), (0.03999, 0.14), (0.03999, 0.15), (0.03999, 0.16), (0.03999, 0.17), (0.03999, 0.18), (0.03999, 0.19), (0.03999, 0.2), (0.03999, 0.21), (0.03999, 0.22), (0.03999, 0.23), (0.03999, 0.24), (0.04999, 0.12), (0.04999, 0.13), (0.04999, 0.14), (0.04999, 0.15), (0.04999, 0.16), (0.04999, 0.17), (0.04999, 0.18), (0.04999, 0.19), (0.04999, 0.2), (0.04999, 0.21), (0.04999, 0.22), (0.04999, 0.23), (0.04999, 0.24), (0.05999, 0.12), (0.05999, 0.13), (0.05999, 0.14), (0.05999, 0.15), (0.05999, 0.16), (0.05999, 0.17), (0.05999, 0.18), (0.05999, 0.19), (0.05999, 0.2), (0.05999, 0.21), (0.05999, 0.22), (0.05999, 0.23), (0.05999, 0.24), (0.08, 0.15), (0.08, 0.16), (0.08, 0.17), (0.08, 0.18), (0.08, 0.19), (0.08, 0.2), (0.08, 0.21), (0.08, 0.22), (0.08, 0.23), (0.09, 0.15), (0.09, 0.16), (0.09, 0.17), (0.09, 0.18), (0.09, 0.19), (0.09, 0.2), (0.09, 0.21), (0.09, 0.22), (0.09, 0.23), (0.1, 0.15), (0.1, 0.16), (0.1, 0.17), (0.1, 0.18), (0.1, 0.19), (0.1, 0.2), (0.1, 0.21), (0.1, 0.22), (0.1, 0.23), (0.10999, 0.15), (0.10999, 0.16), (0.10999, 0.17), (0.10999, 0.18), (0.10999, 0.19), (0.10999, 0.2), (0.10999, 0.21), (0.10999, 0.22), (0.10999, 0.23), (0.11999, 0.15), (0.11999, 0.16), (0.11999, 0.17), (0.11999, 0.18), (0.11999, 0.19), (0.11999, 0.2), (0.11999, 0.21), (0.11999, 0.22), (0.11999, 0.23), (0.12999, 0.15), (0.12999, 0.16), (0.12999, 0.17), (0.12999, 0.18), (0.12999, 0.19), (0.12999, 0.2), (0.12999, 0.21), (0.12999, 0.22), (0.12999, 0.23), (0.13999, 0.15), (0.13999, 0.16), (0.13999, 0.17), (0.13999, 0.18), (0.13999, 0.19), (0.13999, 0.2), (0.13999, 0.21), (0.13999, 0.22), (0.13999, 0.23), (0.16, 0.16), (0.16, 0.17), (0.16, 0.18), (0.16, 0.19), (0.16, 0.2), (0.17, 0.16), (0.17, 0.17), (0.17, 0.18), (0.17, 0.19), (0.17, 0.2), (0.18, 0.16), (0.18, 0.17), (0.18, 0.18), (0.18, 0.19), (0.18, 0.2), (0.19, 0.16), (0.19, 0.17), (0.19, 0.18), (0.19, 0.19), (0.19, 0.2), (0.2, 0.16), (0.2, 0.17), (0.2, 0.18), (0.2, 0.19), (0.2, 0.2), (0.21, 0.16), (0.21, 0.17), (0.21, 0.18), (0.21, 0.19), (0.21, 0.2), (0.22, 0.16), (0.22, 0.17), (0.22, 0.18), (0.22, 0.19), (0.22, 0.2), (0.23, 0.16), (0.23, 0.17), (0.23, 0.18), (0.23, 0.19), (0.23, 0.2), (0.24, 0.16), (0.24, 0.17), (0.24, 0.18), (0.24, 0.19), (0.24, 0.2)]
y = []
for el in x:
    y.append(mgi(el[0], el[1], 0.3, 0.35))
fileSavingStr("coucou2", y)

    
    